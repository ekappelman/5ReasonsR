resp <- GET('http://www.nfl.com/stats/categorystats?tabSeq=1&statisticPositionCategory=RUNNING_BACK&season=2016&seasonType=REG')
library(httr)
resp <- GET('http://www.nfl.com/stats/categorystats?tabSeq=1&statisticPositionCategory=RUNNING_BACK&season=2016&seasonType=REG')
?httr
content(resp)
content(resp,as="text")
?htmltools
library(htmltools)
?htmltools
content(resp,as="raw")
nfltext <- HTML(content(resp,as="text"))
browse <- browsable(nfltext)
browse
tag(nfltext)
?tag
tagGetAttribute(nfltext,attr="table")
tagList(nfltext,attr="table")
tags <- tag(nfltext)
tags <- tag(nfltext,"table")
tags
tags <- tag(nfltext,"td")
tags
library(xml2)
install.packages(xml2)
install.packages('xml2)
''
''
install.packages('xml2')
install.packages('Rcpp')
install.packages("Rcpp")
install.packages('xml2')
library(httr,
xml2)
xml_name(nfltext)
library(httr;
xml2)
library(httr,xml2)
resp <- GET('http://www.nfl.com/stats/categorystats?tabSeq=1&statisticPositionCategory=RUNNING_BACK&season=2016&seasonType=REG')
nfltext <- content(resp,as="text")
xml_name(nfltext)
library(httr)
library(xml2)
resp <- GET('http://www.nfl.com/stats/categorystats?tabSeq=1&statisticPositionCategory=RUNNING_BACK&season=2016&seasonType=REG')
nfltext <- content(resp,as="text")
xml_name(nfltext)
nfltext <- read_xml(content(resp,as="text"))
xml_name(nfltext)
nfltext <- content(resp,as="text")
nfltext
nfltext <- content(resp,as="text")
rad <- read_html(nfltext)
xml_name(rad)
trs <- xml_find_all(rad, ".//tr")
trs
tds <- xml_find_all(rad, ".//td")
tds
trs <- xml_find_all(rad, ".//tr")
trs[1]
trs[2]
trs[3]
xml_attr(trs[1],"href")
xml_attr(trs[2],"href")
xml_attr(trs[2],"a")
xml_attr(trs[2],"class")
xml_children(trs[2])
?xml2
??xml2
child <- xml_children(trs[2])
child <- xml_children(trs[2])
xml_text(child)
child <- xml_children(trs[2])
xml_text(child)
result <- unlist(strsplit(child,"\\r|\\n|\\t"))
result <- unlist(strsplit(as.character(child),"\\r|\\n|\\t"))
result <- result[result!=""]
result
xml_text(child)
result <- unlist(strsplit(as.character(child),"\\r|\\n|\\t|\\td"))
result <- result[result!=""]
result
result <- unlist(strsplit(as.character(child),"\\r|\\n|\\t|\\td|</td>"))
result <- result[result!=""]
result
result <- unlist(strsplit(as.character(child),"\\r|\\n|\\t|\\td|<"))
result <- result[result!=""]
result
xml_parse(child)
xml_contents(child)
xml_text(child,trim=T)
child <- xml_children(trs[1])
xml_text(child,trim=T)
ength(trs)
1:length(trs)
for(i in 2:length(trs)){
child <- xml_children(trs[i])
xml_text(child,trim=T)
}
for(i in 2:length(trs)){
child <- xml_children(trs[i])
print xml_text(child,trim=T)
}
for(i in 2:length(trs)){
child <- xml_children(trs[i])
print(xml_text(child,trim=T))
}
library(mongolite)
install.packages('mongolite')
colNames <- xml_text(xml_children(trs[1]),trim = T)
?data.frame
df <- data.frame()
colnames(df) <- colNames
colNames <- xml_text(xml_children(trs[1]),trim = T)
df <- data.frame()
for(i in 2:length(trs)){
child <- xml_children(trs[i])
df[i-1,]<- xml_text(child,trim=T)
}
mat <- matrix(nrow = length(trs) - 1,ncol = length(colNames))
for(i in 2:length(trs)){
child <- xml_children(trs[i])
mat[i-1,]<- xml_text(child,trim=T)
}
View(mat)
dt <- data.frame(mat)
View(dt)
colnames(df) <- colNames
colNames <- xml_text(xml_children(trs[1]),trim = T)
colnames(df) <- colNames
colnames(df)
df <- data.frame(mat)
colnames(df,colNames)
colNames
library(httr)
library(xml2)
library(mongolite)
resp <- GET('http://www.nfl.com/stats/categorystats?tabSeq=1&statisticPositionCategory=RUNNING_BACK&season=2016&seasonType=REG')
nfltext <- content(resp,as="text")
rad <- read_html(nfltext)
trs <- xml_find_all(rad, ".//tr")
colNames <- xml_text(xml_children(trs[1]),trim = T)
mat <- matrix(nrow = length(trs) - 1,ncol = length(colNames))
for(i in 2:length(trs)){
child <- xml_children(trs[i])
mat[i-1,]<- xml_text(child,trim=T)
}
df <- data.frame(mat,col)
colnames(df) <- colNames
df <- data.frame(mat)
colnames(df) <- colNames
View(df)
running_backs = mongo(collection = "2016RunningBacks", db = "NFLPlayers")
running_backs = mongo(collection = "2016RunningBacks", db = "NFLPlayers")
running_backs = mongo(collection = "2016RunningBacks", db = "NFLPlayers")
running_backs$insert(df)
running_backs$count()
running_backs$iterate()$one()
View(df)
df$Yds
nfl.pc <- df[,5:10]
nfl.pc
nfl.pc <- df[,5:16]
nfl.pc
nfl.pc <- as.num(nfl.pc[,1:12])
nfl.pc <- as.numeric(nfl.pc[,1:12])
nfl.pc[,1:12]
nfl.pc <- as.integer(nfl.pc[,1:12])
nfl.pc <- as.numeric(unlist(nfl.pc[,1:12]))
nfl.pc <- as.numeric(unlist(nfl.pc))
unlist(nfl.pc)
for(i in 1:12){
nfl.pc[,i] <- as.numeric(nfl.pc[,i])
}
nfl.pc <- df[,5:16]
for(i in 1:12){
nfl.pc[,i] <- as.numeric(nfl.pc[,i])
}
nfl.pc <- apply(nfl.pc,1,as.numeric)
nfl.pc <- data.frame(apply(nfl.pc,1,as.numeric))
nfl.pc <- df[,5:16]
cols <- colnames(nfl.pc)
nfl.pc <- data.frame(apply(nfl.pc,1,as.numeric))
nfl.pc <- df[,5:16]
cols <- colnames(nfl.pc)
nfl.pc <- data.frame(apply(nfl.pc,1,as.numeric))
apply(nfl.pc,1,as.numeric)
nfl.pc <- df[,5:16]
nfl.pc <- data.frame(apply(nfl.pc,1,as.numeric))
warnings()
nfl.pc <- df[,5:16]
cols <- colnames(nfl.pc)
nfl.pc <- data.frame(apply(nfl.pc,1,as.double))
nfl.pc <- df[,5:16]
View(nfl.pc)
nfl.pc <- df[,5:16]
cols <- colnames(nfl.pc)
nfl.pc <- data.frame(apply(nfl.pc,1,as.numeric))
View(nfl.pc)
nfl.pc <- df[,5:16]
View(nfl.pc)
library(mongolite)
running_backs = mongo(collection = "2016RunningBacks", db = "NFLPlayers")
df <- running_backs$import()
df <- running_backs$import(running_backs)
df <- running_backs$find()
running_back$find('{"Att":1,"Att/G":1}')
running_backs$find('{"Att":1,"Att/G":1}')
running_backs$find(fields='{"Att":1,"Att/G":1}')
running_backs$find(fields='{"_id:0","Att":1,"Att/G":1}')
running_backs$find(fields='{"_id":0,"Att":1,"Att/G":1}')
running_backs$find(fields='{"_id":0,"Att":1,"Att/G":1,"Yds":1,"Yds/G":1}')
df <- running_backs$find(fields='{"_id":0,"Att":1,"Att/G":1,"Yds":1,"Yds/G":1}')
df <- as.numeric(df)
df[] <- as.numeric(df[])
df[,] <- as.numeric(df[,])
df[,1:4] <- as.numeric(df[,1:4])
df[1:4] <- apply(df[,1:4],1,as.numeric)
warnings
df <- running_backs$find(fields='{"_id":0,"Att":1,"Att/G":1,"Yds":1,"Yds/G":1}')
View(df)
df[1:4] <- apply(df[,1:4],1,as.numeric)
View(df)
df <- gsub(",","",df)
df <- running_backs$find(fields='{"_id":0,"Att":1,"Att/G":1,"Yds":1,"Yds/G":1}')
df <- gsub(",","",df)
df[1:4] <- apply(df[,1:4],1,as.numeric)
running_backs = mongo(collection = "2016RunningBacks", db = "NFLPlayers")
df <- running_backs$find(fields='{"_id":0,"Att":1,"Att/G":1,"Yds":1,"Yds/G":1}')
df <- gsub(",","",df)
running_backs = mongo(collection = "2016RunningBacks", db = "NFLPlayers")
df <- running_backs$find(fields='{"_id":0,"Att":1,"Att/G":1,"Yds":1,"Yds/G":1}')
df[,1:4] <- gsub(",","",df[,1:4])
df[1:4] <- apply(df[,1:4],1,as.numeric)
View(df)
df <- running_backs$find(fields='{"_id":0,"Att":1,"Att/G":1,"Yds":1,"Yds/G":1}')
df[,1:4] <- gsub(",","",df[,1:4])
View(df)
df <- running_backs$find(fields='{"_id":0,"Att":1,"Att/G":1,"Yds":1,"Yds/G":1}')
df[1:4] <- apply(df[,1:4],1,function(x){gsub(",","",x)})
df[1:4] <- apply(df[,1:4],1,as.numeric)
nfl.pc <- prcomp(df,center = TRUE,scale. = TRUE)
plot(ir.pca, type = "l")
print(nfl.pc)
plot(nfl.pc, type = "l")
running_backs = mongo(collection = "2016RunningBacks", db = "NFLPlayers")
nfltext <- content(resp,as="text")
rad <- read_html(nfltext)
trs <- xml_find_all(rad, ".//tr")
colNames <- xml_text(xml_children(trs[1]),trim = T)
mat <- matrix(nrow = length(trs) - 1,ncol = length(colNames))
for(i in 2:length(trs)){
child <- xml_children(trs[i])
mat[i-1,]<- xml_text(child,trim=T)
}
df <- data.frame(mat)
colnames(df) <- colNames
running_backs = mongo(collection = "2016RunningBacks", db = "NFLPlayers")
df <- running_backs$find(fields='{"_id":0,"Att":1,"Att/G":1,
"Yds":1,"Yds/G":1,"TD":1,"Lng":1,"1st":1,"FUM":1}')
df[1:8] <- apply(df[,1:8],1,function(x){gsub(",","",x)})
df[1:8] <- apply(df[,1:8],1,as.numeric)
nfl.pc <- prcomp(df,center = TRUE,scale. = TRUE)
print(nfl.pc)
plot(nfl.pc, type = "l")
df[1:8] <- apply(df[,1:8],1,function(x){gsub(",","",x)})
df[1:8] <- apply(df[,1:8],1,as.numeric)
nfl.pc <- prcomp(df,center = TRUE,scale. = TRUE)
running_backs = mongo(collection = "2016RunningBacks", db = "NFLPlayers")
df <- running_backs$find(fields='{"_id":0,"Att":1,"Att/G":1,
"Yds":1,"Yds/G":1,"TD":1,"Lng":1,"1st":1,"FUM":1}')
df[1:8] <- apply(df[,1:8],1,function(x){gsub(",","",x)})
df <- running_backs$find(fields='{"_id":0,"Att":1,"Att/G":1,
"Yds":1,"Yds/G":1,"TD":1,"1st":1,"FUM":1}')
df[1:7] <- apply(df[,1:7],1,function(x){gsub(",","",x)})
df[1:7] <- apply(df[,1:7],1,as.numeric)
nfl.pc <- prcomp(df,center = TRUE,scale. = TRUE)
print(nfl.pc)
plot(nfl.pc, type = "l")
summary(nfl.pc)
library(mongolite)
running_backs = mongo(collection = "2016RunningBacks", db = "NFLPlayers")
df <- running_backs$find(fields='{"_id":0,"Att":1,"Att/G":1,
"Yds":1,"Yds/G":1,"TD":1,"1st":1,"FUM":1}')
df[1:7] <- apply(df[,1:7],1,function(x){gsub(",","",x)})
df[1:7] <- apply(df[,1:7],1,as.numeric)
nfl.pc <- prcomp(df,center = TRUE,scale. = TRUE)
print(nfl.pc)
summary(nfl.pc)
plot(nfl.pc, type = "l")
plot(TD,Yds,data=df)
library(mongolite)
library(ggplot2)
running_backs = mongo(collection = "2016RunningBacks", db = "NFLPlayers")
df <- running_backs$find(fields='{"_id":0,"Att":1,"Att/G":1,
"Yds":1,"Yds/G":1,"TD":1,"1st":1,"FUM":1}')
df[1:7] <- apply(df[,1:7],1,function(x){gsub(",","",x)})
df[1:7] <- apply(df[,1:7],1,as.numeric)
plot(TD,Yds,data=df)
plot(df$TD,df$Yds)
plot(df$TD,df$Yds/G)
plot(df$TD,df$`Yds/G`)
plot(df$1st,df$`Yds/G`)
plot(df$`1st`,df$`Yds/G`)
plot(df$`Yds/G`,df$`FUM`)
running_backs = mongo(collection = "2016RunningBacks", db = "NFLPlayers")
df <- running_backs$find(fields='{"_id":0,"Att":1,"Att/G":1,
"Yds":1,"Yds/G":1,"TD":1,"1st":1,"FUM":1}')
df[1:7] <- apply(df[,1:7],1,function(x){gsub(",","",x)})
View(df)
running_backs = mongo(collection = "2016RunningBacks", db = "NFLPlayers")
df <- running_backs$find(fields='{"_id":0,"Att":1,"Att/G":1,
"Yds":1,"Yds/G":1,"TD":1,"1st":1,"FUM":1}')
?apply
df[1:7] <- apply(df[,1:7],1,function(x){gsub(",","",x)})
running_backs = mongo(collection = "2016RunningBacks", db = "NFLPlayers")
df <- running_backs$find(fields='{"_id":0,"Att":1,"Att/G":1,
"Yds":1,"Yds/G":1,"TD":1,"1st":1,"FUM":1}')
df[1:7] <- apply(df[,1:7],c(1,2),function(x){gsub(",","",x)})
df[1:7] <- apply(df[,1:7],c(1,2),as.numeric)
plot(df$`Yds/G`,df$`FUM`)
plot(df$`Yds/G`,df$`FUM`,xlab="Yards per Game",ylab = "Fumbles")
lines(lm(df$`Yds/G`,df$`FUM`))
lines(lm(df$`Yds/G`~df$`FUM`))
lmod <- lm(`Yds/G`~`FUM`,data=df)
plot(df$`Yds/G`,df$`FUM`,xlab="Yards per Game",ylab = "Fumbles")
abline(lmod)
lines(lmod)
plot(df$`Yds/G`,df$`FUM`,xlab="Yards per Game",ylab = "Fumbles")
lines(lmod)
plot(lmod)
plot(lmod)
ggplot(df,aes(x=`Yds/G`,y=`FUM`))+
geom_point(aes(fill = `1st`))
ggplot(df,aes(x=`Yds/G`,y=`FUM`))+
geom_point(aes(color = `1st`))
ggplot(df,aes(x=`Yds/G`,y=`FUM`))+
geom_point(aes(color = `1st`,size=TD))
ggplot(df,aes(x=`Yds/G`,y=`FUM`))+
geom_point(aes(color = `1st`,size=TD))+
geom_smooth()
plot(lmod)
ggplot(df,aes(x=`Yds/G`,y=`FUM`))+
geom_point(aes(color = `1st`,size=TD))+
geom_smooth()+
labs(xlab = "Yards per Game",ylab="Fumble")
ggplot(df,aes(x=`Yds/G`,y=`FUM`))+
geom_point(aes(color = `1st`,size=TD))+
geom_smooth()+
labs(x = "Yards per Game",y ="Fumble")
ggplot(df,aes(x=`Yds/G`,y=`FUM`))+
geom_point(aes(color = `1st`,size=TD))+
geom_smooth()+
labs(x = "Yards per Game",y ="Fumble",title = "Yards per Game and Fumbles")
?labs
ydata <- sample(c(1:100),10000,replace=T)
xdata <- sample(c("Erik","Cooper","Stewart"),replace = T)
df <- data.frame(Marbles=ydata,Person=xdata)
ydata <- sample(c(1:100),10000,replace=T)
xdata <- sample(c("Erik","Cooper","Stewart"),10000,replace = T)
df <- data.frame(Marbles=ydata,Person=xdata)
ggplot(df,aes(x=Person,y=Marbles))+
geom_bar(position = "dogded")
ggplot(df,aes(x=Person,y=Marbles))+
geom_bar(position = "beside")
ydata <- sample(c(1:100),10000,replace=T)
xdata <- sample(c("Erik","Cooper","Stewart"),10000,replace = T)
zdata <- sample(c("Red","Blue","Green","Yellow","Orange"),10000,replace = T)
df <- data.frame(Marbles=ydata,Person=xdata,Color=zdata)
ggplot(df,aes(x=Person,y=Marbles,group=Color))+
geom_bar()
ggplot(df,aes(x=Person,group=Color))+
geom_bar()
ggplot(df,aes(x=Person,fill=Color))+
geom_bar(posistion = "dogded")
ggplot(df,aes(x=Person,fill=Color))+
geom_bar(posistion = "dogde")
ggplot(df,aes(x=Person,fill=Color))+
geom_bar(position = "dogde")
ggplot(df,aes(x=Person,fill=Color))+
geom_bar(position="dodge")
?sample
ydata <- sample(c(1:100),10000,replace=T)
xdata <- sample(c("Erik","Cooper","Stewart"),10000,replace = T)
zdata <- sample(c("Red","Blue","Green","Yellow","Orange"),10000,replace = T,
prob=c(0.4,0.2,0.25,0.1,0.05))
df <- data.frame(Marbles=ydata,Person=xdata,Color=zdata)
ggplot(df,aes(x=Person,fill=Color))+
geom_bar(position="dodge")
